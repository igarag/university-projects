 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:

 ** ¿Cuántos paquetes componen la captura?
 		954 paquetes.

 ** ¿Cuánto tiempo dura la captura?
 		56.149345

 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
 		192.168.1.34. Es una IP privada por el tipo de numero que es, el tipico de una red privada: 192.168.1.xx, clase C.


3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.

 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
 		Es mayor el trafico de UDP (96.23%). Si es consistente ya que en una aplicacion en tiempo real, la mayor parte de las veces no 
 		podremos esperar a recibir asentimientos y retransmisiones ya que cuando quieran llegarnos es posible que ya sea tarde.

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
 		RTP (Real Time Protocol), ARP (Adress Resolution Protocol), IP (Internet Protocol version 4), SIP (Session Initiation Protocol)
 		RTCP (Real Time Control Protocol), el ya mencionado UDP (User Datagram Protocol), muy poco de TCP (Transmision Control Protocol),
 		HTTP (Hypertext Transfer Procotol), ICMP (Internet Control Message Protocol)

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.

 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
 		Comunicacion Sip hay en los segundos: 7, 14 16, 38, 39 y 55 aproximadamente.

 ** Y los paquetes con RTP, ¿cuándo se envían?
 		Desde el 18 al 22 aproximadamente el primer intervalo y desde el segundo 22 al segundo 40.



================[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]=====================

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.

 ** ¿Qué servicio es el utilizado en estas tramas?
 		Se usa el servicio DNS (Domain Name Services) para resolver la direccion que introduce el usuario a ekiga.net

 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
 		El origen pregunta a 80.58.61.250 por ekiga.net

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
 		Contesta con la 86.64.162.35

 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
 		Se hace el proceso inverso, dada la IP que nos diga el nmmbre al que correspone pero este Servicio
 		de DNS no acepta resolucion inversa por lo que nos devuelve un No such Name (No hay tal nombre)

6. A continuación, hay más de una docena de tramas TCP/HTTP.

 ** ¿Podrías decir la URL que se está pidiendo?
 		http://ekiga.net/ip/

 ** ¿Qué user agent (UA) la está pidiendo?
 		UA Ekiga

 ** ¿Qué devuelve el servidor?
 		HTTP/1.1 200 OK a la IP 83.36.48.212

 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
		El navegador nos devuelve: 193.147.77.22 que es la IP publica del NAT. Hacer eso nos devuelve la direccion con la que nos ve el servidor. 


7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.

 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
 		El protocolo STUN se usa para conseguir que los clientes NAT puedan efectuar llamadas telefonicas a un proveedor VOIP alojado fuera de su red local. Nos permite saber con que tipo de NAT estamos trabajando y actuar en consecuencia. STUN soporta tres de los cuatro tipos de NAT existentes: Full Cone (cuanlquier extremo puede iniciar sesion), Restricted Cone y Port Restricted Cone

 ** ¿Estamos tras un NAT?
 		Si, ya que la IP del cliente no es la misma con la que el servidor de STUN nos ve. La IP publica es: 83.36.48.212



8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.

 ** ¿Qué dirección IP tiene el servidor Registrar?
 		86.64.162.35

 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
 		5060

 ** ¿Qué método SIP utiliza el UA para registrarse?
 		REGISTER

 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
 		INVITE, BYE, ACK, OPTIONS, CANCEL, NOTIFY, REFER, MESSAGE


=======================[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]=========================

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
 		No, se manda un Error 401 Unauthozired

 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
 		El servidor manda un mensaje con el contenido 200 OK.

 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
 		La diferencia entre los paquetes del primer intento y del segundo (paquete 46 y 51) es la cabecera Authorization donde se encuentra, entre otras cosas, username="grex, realm="ekiga.net", etc, por eso ese paquete pesa mas.

 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
 		3600 segundos.



10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.

 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
 		Si, en el campo de la cabecera SIP "From" tenemos informacion del usuario, de su direccion SIP, nombre de usuario, etc

 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
 		El contenido es el la descripcion de sesion(SDP: Session Description Protocol), informacion y codecs de lo que entiende el emisor para ponerse de acuerdo con el receptor.

 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
 		No tiene exito, nos informa de un error (407: Proxy Authentication Required)

 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
 		En que el proxy Authorization es un campo completo donde se incluyen: username, realm, nonce, uri.....




11. Una vez conectado, estudia el intercambio de tramas.

 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
 		RTP, RTCP (se usa para enviar datos de control entre emisor y receptor de una secuencia RTP. Los paquetes RTCP son enviados aproximadamente cada dos segundos, y contienen datos que ayudan a verificar las condiciones de transmision en el extremo remoto).

 ** ¿Cuál es el tamaño de paquete de los mismos?
 		RTP: 1712 bits
 		RTCP: 816 y 344 bits

 ** ¿Se utilizan bits de padding?
 		No se usan bits de relleno, padding = False

 ** ¿Cuál es la periodicidad de los paquetes que se envían?
 		RTP = 20 ms 	1/50 = 20ms
 		RTCP = 2 s

 ** ¿Cuántos bits/segundo estamos enviando?
 		50 bits/segundo para audio (64000/(160*8)=50 bits/seg)


==================[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]=======================

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
 		2 flujos. Uno al puerto 5014 y otro al 5010. Uno de audio (g.711) y uno de video (h261).

 ** ¿Cuántos paquetes se pierden?
 		0 paquetes de 611

 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
 		Significa retardo entre dos parquetes y el maximo valor es de 1290.44 ms

 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
 		El Jitter maximo es 119.64ms y el Jitter medio es de 42.50 ms.

 		El jitter es la fluctuacion durante el envio de señales digitales. Es un cambio abrupto de la propiedad de la señal (amplitud y frecuencia)

 		No, ya que, analizando al grafica de la conversacion, esta deberia ser plana para tener una optima calidad y se aprecian irregularidades
 		por lo que no la consideramos de muy buena calidad.




13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
 		0 ms y 0 ms, ya que va sin retardo y sin jitter por ser el primero.

 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
		No porque no se sabe que paso antes de realizar la captura.

 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
 		Hasta el paquete 247, a partir de ahi son de 30 ms en adelante.
 		
 ** ¿A qué se debe el cambio tan brusco del jitter?
 		A que el siguiente paquete llega muy tarde. Es un hecho puntual.

 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
 		Al llegar un paquete tarde, este genera un retardo y el jitter, al ver esa latencia indica cuando deberia
 		mandarse el siguiente paquete para que llegue a tiempo. Por tanto, en cuanto un paquete se pierde, hay un jitter asociado. Si se
 		sigue viendo paquetes, se puede ver como, en algunas tramas, se recupera porque van llegando a tiempo y como en otras, que vuelve a
 		llegar tarde, vuelva a dispararse el valor del jitter.

 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
 		Si, a medida que el tiempo de la delta crece el jitter lo hace tambien.




14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
 		24.80 segundos

 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
 		2 SSRCs, uno para audio (611 paquetes) y uno para video (196).

 		No hay ningun CSRC porque no hay un mezclador, los flujos viajan por separado.




15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
 		BYE

 ** ¿En qué trama(s)?
 		924, 925, 927 y 933

 ** ¿Por qué crees que se envía varias veces?
 		Manda 4 veces el BYE para asgurarse de que llega y poder cerrar sesion cuanto antes.




16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
 		Envia Expires con 0 para confirmar que le borre del servidor

 ** ¿En qué trama sucede esto?
 		Trama 950.

 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
 		Que es un REGISTER para que se borre del servidor (Expires = 0).


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta al lanzar la aplicación.



17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
 		DNS nos hara falta para saber las IP necesarias de las personas a las que llamemos.

 		STUN tambien tenemos aunque estamos en IP publica, ya que su algoritmo pasa por varios procesos de comprobacion, entre ellos comprueba si hay firewall.

 ** ¿Son diferentes el registro y la descripción de la sesión?
 		El registro no cambia con respecto a la captura anterior pero la descripcion de sesion (SDP) si, ya que en la otra se especifica 
 		el ancho de banda que habra en la transmision, cosa que en este no ocurre.


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
 	2 y ambos de audio.

 ** ¿Cuál es su periodicidad?
 		Como es el mismo protocolo (g.711), la periodicidad en RTP es la misma, 20 ms
 		Para RTCP pasamos a 5 segundos entre los mensajes aunque hay uno que se manda como continuacion o extension  de uno de los mensajes, pero 
 		aproximadamente es cada 5 segundos.

 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
 		El valor maximo de la delta es de 26.88ms y el maximo valor del Jitter es de 1.21 ms (Valor medio 0.25 ms)


 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
 		En Telephony => Stream Analysis => Player seleccionando los flujos y al reproducir se escucha, en este caso, una musica.

 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
 		Radio


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]




19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.
	Archivo en el repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
